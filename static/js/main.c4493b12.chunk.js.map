{"version":3,"sources":["components/NewEnpense/ExpenseForm.js","components/NewEnpense/NewExpense.js","components/UI/Card.js","components/ExpenseFilter/ExpenseFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","expense","getMonth","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","Expenses","filteredYear","setFilteredYear","filterExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4493b12.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: '',\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault(); //when submit, page reload, use this to stop\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input\r\n            type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input\r\n            type='number'\r\n            min='0.01'\r\n            step='0.01'\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input\r\n            type='date'\r\n            min='2019-01-01'\r\n            max='2022-12-31'\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n        <button type='submit'>Add Expense</button>\r\n        <button onClick = {props.onCancel}>Cancel</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;","import React,{useState} from 'react';\r\nimport './NewExpense.css'\r\nimport ExpenseForm from './ExpenseForm';\r\nconst NewExpense = (props) => {\r\n\r\n     const [isEditing, setIsEditing] = useState(false);\r\n    \r\n        \r\n    const saveExpenseDatahandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n\r\n    }\r\n    const isEditHandler = () => {\r\n        setIsEditing(true);\r\n    }\r\n    const onCancelHandler = () => {\r\n        setIsEditing(false);\r\n    }\r\n\r\n    \r\n\r\n    //create a function in parent component, use param from child and pass the function to a props of child compo\r\n    return (\r\n        \r\n            <div className='new-expense'>\r\n                {!isEditing && (<button onClick={isEditHandler}>Add new expense</button>)}\r\n                {isEditing && (<ExpenseForm onSaveExpenseData = {saveExpenseDatahandler} onCancel = {onCancelHandler}/>)}\r\n            </div>\r\n            //JSX\r\n       \r\n    );\r\n};\r\n\r\nexport default NewExpense;\r\n","import './Card.css';\r\n\r\nconst  Card = (props) => {\r\n    const classes = 'card ' + props.className; //tell react that you can set class name in the custom compo\r\n    //'card is a default class, no big deal\r\n    return <div className = {classes}>{props.children}</div>\r\n}\r\n\r\n\r\nexport default Card;\r\n\r\n//cannot use a plain custom components as a parent, use childern to fix this","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n          <option value='0000'>All expenses</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = props => {\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0},\r\n    ];\r\n\r\n    for (const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth() ;\r\n        chartDataPoints[expenseMonth].value += expense.amount ;\r\n    }\r\n    return <Chart dataPoints = {chartDataPoints}/>\r\n};\r\n\r\nexport default ExpensesChart;","\r\nimport './ExpenseDate.css'\r\nfunction ExpenseDate(props){\r\n\r\n    const month = props.date.toLocaleString('en-US',{month: 'short'});\r\n    const day = props.date.toLocaleString('en-US',{day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n    return (\r\n    <div className = \"expense-date\">\r\n        <div className = \"expense-date__month\">{month}</div>\r\n        <div className = \"expense-date__year\">{year}</div>\r\n        <div className = \"expense-date__day\">{day}</div>\r\n    </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ExpenseDate ;","import './ExpenseItem.css';\r\nimport React from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\n\r\nfunction ExpenseItem(props){ //or props withou curly brakets\r\n    return (\r\n    <Card className = \"expense-item\">\r\n        <ExpenseDate date={props.date}/>\r\n        <div className = \"expense-item__description\">\r\n            <h2>{props.title}</h2>\r\n            <div className = \"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n    </Card>\r\n    );\r\n}\r\nexport default ExpenseItem;\r\n\r\n//double forward data App => Item => Date","import './ExpensesList.css'\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\n\r\nconst ExpensesList = props => {\r\n    \r\n    if (props.items.length === 0) {\r\n        return <h2 className = \"expenses-list__fallback\">Found no expenses.</h2>\r\n     \r\n    }\r\n\r\n    return <ul className=\"expense-list\">{\r\n        props.items.map((expense) => (\r\n        <ExpenseItem \r\n        key = {expense.id}\r\n        title = {expense.title} \r\n        amount = {expense.amount} \r\n        date= {expense.date} />\r\n            ))}\r\n        </ul>\r\n};\r\n\r\nexport default ExpensesList;","import React, { useState } from 'react';\r\n\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from '../ExpenseFilter/ExpenseFilter';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport ExpensesList from './ExpensesList';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n    \r\n  };\r\n\r\nconst filterExpenses = props.items.filter(expense => {\r\n    if (filteredYear === '0000'){\r\n      return expense.date.getFullYear().toString() !== filteredYear ;\r\n    } else {\r\n    return expense.date.getFullYear().toString() === filteredYear ;\r\n    }\r\n}  );  \r\n\r\n\r\nreturn (\r\n    <li>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n      <div>\r\n        { (filteredYear!=='0000') && <ExpensesChart expenses = {filterExpenses}/>}\r\n        { (filteredYear==='0000') &&  <div>No graph avaiable</div>}\r\n      </div>\r\n      <ExpensesList items = {filterExpenses} />\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Expenses;","import React, {useState} from 'react';\nimport './App.css';\nimport NewExpense from './components/NewEnpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n  { \n    id: 'e1',\n    title: 'Car Insurance', \n    amount : 126.98, \n    date: new Date(2019,5,27)},\n  {\n    id: 'e2',\n    title: 'Toilet Paper', \n    amount : 25.98, \n    date: new Date(2020,3,27),\n  },\n  {\n    id: 'e3',\n    title: 'New Macbook Pro', \n    amount : 1726.98, \n    date: new Date(2021,9,27), \n  },\n  {\n    id: 'e4',\n    title: 'New Coffee Machine', \n    amount : 176.98, \n    date: new Date(2021,9,17), \n  },\n]\nconst App = () => {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    setExpenses((prevExpenses)=> {\n      return [expense,...prevExpenses];\n    })\n  }\n  return (\n    <div>\n       <NewExpense onAddExpense = {addExpenseHandler}/>\n       <Expenses items={expenses}/>\n\n    </div>\n  );\n}\n\n//no communication between 2 child compos, in this case is expenses and new expense\n//pass the prop/state from one child to parent and from parent pass it to the others child\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}